//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ChoiceApplication.ChoiceService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ChoiceService.Service1Soap")]
    public interface Service1Soap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/waehle", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool waehle(int i);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/waehle", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> waehleAsync(int i);
        
        // CODEGEN: Parameter 'erzeuge_bildResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/erzeuge_bild", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ChoiceApplication.ChoiceService.erzeuge_bildResponse erzeuge_bild(ChoiceApplication.ChoiceService.erzeuge_bildRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/erzeuge_bild", ReplyAction="*")]
        System.Threading.Tasks.Task<ChoiceApplication.ChoiceService.erzeuge_bildResponse> erzeuge_bildAsync(ChoiceApplication.ChoiceService.erzeuge_bildRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/stimmen", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int[] stimmen();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/stimmen", ReplyAction="*")]
        System.Threading.Tasks.Task<int[]> stimmenAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/farbevon", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string farbevon(int i);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/farbevon", ReplyAction="*")]
        System.Threading.Tasks.Task<string> farbevonAsync(int i);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/reset", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool reset();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/reset", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> resetAsync();
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="erzeuge_bild", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class erzeuge_bildRequest {
        
        public erzeuge_bildRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="erzeuge_bildResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class erzeuge_bildResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] erzeuge_bildResult;
        
        public erzeuge_bildResponse() {
        }
        
        public erzeuge_bildResponse(byte[] erzeuge_bildResult) {
            this.erzeuge_bildResult = erzeuge_bildResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface Service1SoapChannel : ChoiceApplication.ChoiceService.Service1Soap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1SoapClient : System.ServiceModel.ClientBase<ChoiceApplication.ChoiceService.Service1Soap>, ChoiceApplication.ChoiceService.Service1Soap {
        
        public Service1SoapClient() {
        }
        
        public Service1SoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1SoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1SoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1SoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool waehle(int i) {
            return base.Channel.waehle(i);
        }
        
        public System.Threading.Tasks.Task<bool> waehleAsync(int i) {
            return base.Channel.waehleAsync(i);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ChoiceApplication.ChoiceService.erzeuge_bildResponse ChoiceApplication.ChoiceService.Service1Soap.erzeuge_bild(ChoiceApplication.ChoiceService.erzeuge_bildRequest request) {
            return base.Channel.erzeuge_bild(request);
        }
        
        public byte[] erzeuge_bild() {
            ChoiceApplication.ChoiceService.erzeuge_bildRequest inValue = new ChoiceApplication.ChoiceService.erzeuge_bildRequest();
            ChoiceApplication.ChoiceService.erzeuge_bildResponse retVal = ((ChoiceApplication.ChoiceService.Service1Soap)(this)).erzeuge_bild(inValue);
            return retVal.erzeuge_bildResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ChoiceApplication.ChoiceService.erzeuge_bildResponse> ChoiceApplication.ChoiceService.Service1Soap.erzeuge_bildAsync(ChoiceApplication.ChoiceService.erzeuge_bildRequest request) {
            return base.Channel.erzeuge_bildAsync(request);
        }
        
        public System.Threading.Tasks.Task<ChoiceApplication.ChoiceService.erzeuge_bildResponse> erzeuge_bildAsync() {
            ChoiceApplication.ChoiceService.erzeuge_bildRequest inValue = new ChoiceApplication.ChoiceService.erzeuge_bildRequest();
            return ((ChoiceApplication.ChoiceService.Service1Soap)(this)).erzeuge_bildAsync(inValue);
        }
        
        public int[] stimmen() {
            return base.Channel.stimmen();
        }
        
        public System.Threading.Tasks.Task<int[]> stimmenAsync() {
            return base.Channel.stimmenAsync();
        }
        
        public string farbevon(int i) {
            return base.Channel.farbevon(i);
        }
        
        public System.Threading.Tasks.Task<string> farbevonAsync(int i) {
            return base.Channel.farbevonAsync(i);
        }
        
        public bool reset() {
            return base.Channel.reset();
        }
        
        public System.Threading.Tasks.Task<bool> resetAsync() {
            return base.Channel.resetAsync();
        }
    }
}
